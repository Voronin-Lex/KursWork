import R from 'ramda'

import {
    FETCH_PHONES_SUCCESS,
    FETCH_PHONE_BY_ID_SUCCESS,
    LOAD_MORE_PHONES_SUCCESS, BASKET_CHECKOUT
} from 'actionTypes'

const initialState = {}

export default (state = initialState, {type, payload}) => {
    switch (type) {
        case FETCH_PHONES_SUCCESS:
            const newValues = R.indexBy(R.prop('id'), payload)
            return R.merge(state, newValues)
        case LOAD_MORE_PHONES_SUCCESS:
            const moreValues = R.indexBy(R.prop('id'), payload)
            return R.merge(state, moreValues)
        case FETCH_PHONE_BY_ID_SUCCESS:
            return R.assoc(payload.id, payload, state)
        case BASKET_CHECKOUT:
            console.log("state = " , state);
            console.log("payload = " , payload);
            let editedState = Object.assign({}, ...Object.keys(state).map(k =>
                ({[k]: state[k].id === payload[0].id ? Object.assign({}, state[k], {
                    count: (parseInt(state[k].count) - parseInt(payload[0].count)).toString()
                }) : state[k]})));

            console.log("editedState", editedState);
            return editedState;
        default:
            return state
    }
}