import React, {Component} from 'react';

import {Users} from '../../api/mockCredentials'
import {Link} from "react-router";

class UsersClass extends Component {
    render() {
        console.log("this.props = ", this.props)
        var index = Users.findIndex(obj => obj['id'] === this.props.id)
        return (
            <tr>
                <td className="user">
                    <div className="user-info">
                        <div className="user-name"> {this.props.username} </div>
                    </div>
                </td>
                <td>
                    <input type="text" placeholder="Password..."  //value={Users[index].password}
                           onChange={(e) => this.handlePasswordChange(this.props.id, e)}
                    />
                </td>
                <td>
                    <span
                        className='delete-cart'
                        onClick={() => this.removeUser(this.props.id)}
                    />
                </td>
            </tr>
        );
    }


    handlePasswordChange(userid, event) {
        console.log(userid)
        var index = Users.findIndex(obj => obj['id'] === userid)
        var newValue = Users[index];
        newValue['password'] = event.target.value;
        Users[index] = newValue;
        console.log(index)
        console.log("Users = ", Users);
        //TODO: записать в базу новый password
    }

    removeUser(id){
        var index = Users.findIndex(obj => obj['id'] === id)
        //TODO: удалить из базы
        Users.splice(Users[index], 1);
        console.log("Users=", Users);
    }
}


class UsersList extends Component {
    constructor(props) {
        super(props);
    }


    componentWillMount() {
        console.log("Users = ", Users);
        this.setState.bind(this)({
            displayedUsers: Users
        });
    }


    handleSearch(event) {
        var searchQuery = event.target.value.toLowerCase();
        console.log("searchQuery = ", searchQuery);
        var displayedUsers = Users.filter(function (el) {
            var searchValue = el.username.toLowerCase();
            return searchValue.indexOf(searchQuery) !== -1;
        });
        console.log("displayedUsers = ", displayedUsers);
        this.setState.bind(this)({
            displayedUsers: displayedUsers
        });
    }


    render() {
        return (
            <div className="users">
                <input type="text" placeholder="Search..." className="search-field"
                       onChange={this.handleSearch.bind(this)}/>
                <div className='table-responsive'>
                    <table className='table-bordered table-striped table-condensed cf'>
                        <tbody>
                        {
                            this.state.displayedUsers.map(function (el) {
                                console.log("this.state.displayedUsers= ", this.state.displayedUsers)
                                return <UsersClass
                                    key={el.id}
                                    id={el.id}
                                    username={el.username}
                                    password={el.password}
                                />;
                            }.bind(this))
                        }
                        </tbody>
                    </table>
                </div>

                <br/>
                <br/>
                <Link
                    to={`/add_user`}
                    className='btn btn-default'
                >
                    Добавить нового пользователя
                </Link>

            </div>
        );
    }
}

export default UsersList;