import React, {Component} from 'react';
import {connect} from 'react-redux'
import {Link} from "react-router";
import {
    removeUser,
    changeUserPassword,
    addUser
} from 'actions'


class UsersPage extends Component {
    constructor(props) {
        super(props);
        this.handleChange = this.handleChange.bind(this);
        let initialState = {username: '', password: ''};
        this.state = {credentials: initialState}
    }

    handleChange(event) {
        let id = event.target.id;
        let newState = Object.assign({}, this.state.credentials);
        newState[id] = event.target.value;
        this.setState({credentials: newState});
    }

    renderUser(user, index){
        const {removeUser} = this.props;
        const {changeUserPassword} = this.props;
        return (
            <tr key={index}>
                <td className="user">
                    <div className="user-info">
                        <div className="user-name"> {user.username} </div>
                    </div>
                </td>
                <td>
                    <input type="text" placeholder="Password..."  value={user.password}
                           onChange={(event) => changeUserPassword(user.id, event.target.value)}
                    />
                </td>
                <td>
                    <span
                        className='delete-cart'
                        onClick={() => removeUser(user.id)}
                    />
                </td>
            </tr>
        )
    }

    render(){
        const {users} = this.props;
        console.log(users);
        return (
            <div className="users">
                <input type="text" placeholder="Search..." className="search-field"
                       onChange=""/>
                <div className='table-responsive'>
                    <table className='table-bordered table-striped table-condensed cf'>
                        <tbody>
                            {users.map((user, index) => this.renderUser(user, index))}
                        </tbody>
                    </table>
                </div>

                <br/>
                <br/>
                {/*<Link*/}
                    {/*to={`/add_user`}*/}
                    {/*className='btn btn-default'*/}
                {/*>*/}
                    {/*Добавить нового пользователя*/}
                {/*</Link>*/}
                <div>
                    {this.renderNewUserMenu()}
                </div>

            </div>
        );
    }


    renderNewUserMenu() {
        const {addUser} = this.props;
        return (
            <form className='authForm' >
                <div className='form-group'>
                    <label htmlFor='login'>Login</label>
                    <input type='login' className='form-control'
                           name='login' placeholder="username"
                           value={this.state.credentials.username}
                           id = 'username'
                           onChange={this.handleChange}/>
                </div>
                <div className='form-group'>
                    <label htmlFor='password'>Password</label>
                    <input type='password' className='form-control'
                           name='password' placeholder="password"
                           value={this.state.credentials.password}
                           id = 'password'
                           onChange={this.handleChange}/>
                </div>
                <button type='button' className='btn btn-primary' onClick={() => addUser(this.state.credentials.username,
                    this.state.credentials.password)}>
                    Добавить нового пользователя
                </button>
            </form>
        )
    }
}




const mapStateToProps = (state, ownProps) => {
    return {
        users: state.users
    }
};

const mapDispatchToProps = {
    removeUser,
    changeUserPassword,
    addUser
};

export default connect(mapStateToProps, mapDispatchToProps)(UsersPage)