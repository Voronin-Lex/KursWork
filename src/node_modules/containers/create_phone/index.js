import React, {Component} from 'react';
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';
import form from 'react-bootstrap/lib/Form';
import FormGroup from 'react-bootstrap/lib/FormGroup'
import ControlLabel from 'react-bootstrap/lib/ControlLabel'
import FormControl from 'react-bootstrap/lib/FormControl'
import Button from 'react-bootstrap/lib/Button'
import {createPhone} from "actions";

class AddPhone extends Component {

    constructor(props) {
        super(props);
        this.handleSubmit = this.handleSubmit.bind(this);
    }

    handleSubmit(event) {
        event.preventDefault();
        let newPhone = {
            id: (parseInt(this.props.phones[this.props.phones.length-1].id) + 1).toString(),
            name: event.target.phoneName.value,
            price: event.target.price.value,
            count: event.target.count.value,
            image: event.target.image.value,
            description: event.target.description.value
        };
        console.log(newPhone);
        this.props.createPhone(newPhone);
        setTimeout(() => window.location.assign("#/"), 1000);
    }

    render() {
        return (
            <div>
                <h3>Новый телефон</h3>
                <form onSubmit={this.handleSubmit}>
                    <FormGroup
                        bsSize="sm"
                        controlId="phoneName">
                        <ControlLabel>Название</ControlLabel>
                        <FormControl
                            type="text"
                            placeholder="Введите название"
                        />
                    </FormGroup>
                    <FormGroup
                        bsSize="sm"
                        controlId="price">
                        <ControlLabel>Цена</ControlLabel>
                        <FormControl
                            type="number"
                            placeholder="Введите цену"
                        />
                    </FormGroup>
                    <FormGroup
                        bsSize="sm"
                        controlId="description">
                        <ControlLabel>Описание</ControlLabel>
                        <FormControl
                            componentClass="textarea"
                            placeholder="Enter description"
                        />
                    </FormGroup>
                    <FormGroup
                        bsSize="sm"
                        controlId="image">
                        <ControlLabel>Путь к фото</ControlLabel>
                        <FormControl
                            type="text"
                        />
                    </FormGroup>
                    <FormGroup
                        bsSize="sm"
                        controlId="count">
                        <ControlLabel>Количество</ControlLabel>
                        <FormControl
                            type="number"
                        />
                    </FormGroup>
                    <Button type="submit" bsStyle="success">
                        Добавить телефон
                    </Button>
                </form>

            </div>
        )
    }


}

function mapStateToProps(state) {
    return {
        phones: state.admin
    };
}

function matchDispatchToProps(dispatch) {
    return bindActionCreators({
         createPhone: createPhone,
    }, dispatch);
}

export default connect(mapStateToProps, matchDispatchToProps)(AddPhone);
